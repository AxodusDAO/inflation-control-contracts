/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BombTaxOracle, BombTaxOracleInterface } from "../BombTaxOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bomb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bomb",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint144",
        name: "amountOut",
        type: "uint144",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bomb",
        type: "address",
      },
    ],
    name: "setBomb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "setPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "setWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ab5380380610ab58339818101604052606081101561003357600080fd5b5080516020820151604090920151909190600061004e6101eb565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0383166100f3576040805162461bcd60e51b815260206004820152601860248201527f626f6d6220616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b6001600160a01b03821661014e576040805162461bcd60e51b815260206004820152601860248201527f7765746820616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b6001600160a01b0381166101a9576040805162461bcd60e51b815260206004820152601860248201527f7061697220616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b600180546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600380549190931691161790556101ef565b3390565b6108b7806101fe6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610170578063a8aa1b3114610178578063b1b0c49e14610180578063b8d1452f14610188578063f2fde38b146101ae5761009e565b80631274e724146100a35780633ddac953146100cb5780633fc8cef31461011e578063715018a6146101425780638187f5161461014a575b600080fd5b6100c9600480360360208110156100b957600080fd5b50356001600160a01b03166101d4565b005b6100f7600480360360408110156100e157600080fd5b506001600160a01b0381351690602001356102b3565b6040805171ffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610126610428565b604080516001600160a01b039092168252519081900360200190f35b6100c9610437565b6100c96004803603602081101561016057600080fd5b50356001600160a01b03166104e3565b6101266105c2565b6101266105d1565b6101266105e0565b6100c96004803603602081101561019e57600080fd5b50356001600160a01b03166105ef565b6100c9600480360360208110156101c457600080fd5b50356001600160a01b03166106ce565b6101dc6107d0565b6001600160a01b03166101ed6105c2565b6001600160a01b031614610236576040805162461bcd60e51b81526020600482018190526024820152600080516020610862833981519152604482015290519081900360640190fd5b6001600160a01b038116610291576040805162461bcd60e51b815260206004820152601860248201527f626f6d6220616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546000906001600160a01b03848116911614610311576040805162461bcd60e51b81526020600482015260166024820152753a37b5b2b7103732b2b239903a37903132903137b6b160511b604482015290519081900360640190fd5b600154600354604080516370a0823160e01b81526001600160a01b039283166004820152905160009392909216916370a0823191602480820192602092909190829003018186803b15801561036557600080fd5b505afa158015610379573d6000803e3d6000fd5b505050506040513d602081101561038f57600080fd5b5051600254600354604080516370a0823160e01b81526001600160a01b039283166004820152905193945060009391909216916370a08231916024808301926020929190829003018186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d602081101561041157600080fd5b5051905061041f82826107d4565b95945050505050565b6002546001600160a01b031681565b61043f6107d0565b6001600160a01b03166104506105c2565b6001600160a01b031614610499576040805162461bcd60e51b81526020600482018190526024820152600080516020610862833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6104eb6107d0565b6001600160a01b03166104fc6105c2565b6001600160a01b031614610545576040805162461bcd60e51b81526020600482018190526024820152600080516020610862833981519152604482015290519081900360640190fd5b6001600160a01b0381166105a0576040805162461bcd60e51b815260206004820152601860248201527f7061697220616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6003546001600160a01b031681565b6001546001600160a01b031681565b6105f76107d0565b6001600160a01b03166106086105c2565b6001600160a01b031614610651576040805162461bcd60e51b81526020600482018190526024820152600080516020610862833981519152604482015290519081900360640190fd5b6001600160a01b0381166106ac576040805162461bcd60e51b815260206004820152601860248201527f7765746820616464726573732063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6106d66107d0565b6001600160a01b03166106e76105c2565b6001600160a01b031614610730576040805162461bcd60e51b81526020600482018190526024820152600080516020610862833981519152604482015290519081900360640190fd5b6001600160a01b0381166107755760405162461bcd60e51b815260040180806020018281038252602681526020018061083c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600080821161082a576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161083357fe5b04939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122003fc38e8ad322fa9220fd20ddfb94021f29fc02d84fce5e2edaecf6068b63fd064736f6c634300060c0033";

type BombTaxOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BombTaxOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BombTaxOracle__factory extends ContractFactory {
  constructor(...args: BombTaxOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _bomb: string,
    _weth: string,
    _pair: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BombTaxOracle> {
    return super.deploy(
      _bomb,
      _weth,
      _pair,
      overrides || {}
    ) as Promise<BombTaxOracle>;
  }
  getDeployTransaction(
    _bomb: string,
    _weth: string,
    _pair: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bomb, _weth, _pair, overrides || {});
  }
  attach(address: string): BombTaxOracle {
    return super.attach(address) as BombTaxOracle;
  }
  connect(signer: Signer): BombTaxOracle__factory {
    return super.connect(signer) as BombTaxOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BombTaxOracleInterface {
    return new utils.Interface(_abi) as BombTaxOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BombTaxOracle {
    return new Contract(address, _abi, signerOrProvider) as BombTaxOracle;
  }
}
